{"version":3,"sources":["logo.svg","display/graphs/Node.js","display/graphs/Edge.js","display/graphs/GraphVisual.js","display/input/InputGraph.js","display/input/Profile.js","display/input/Inputs.js","display/error/Error.js","display/data/Data.js","display/authtokens/TokenPage.js","routing/Routes.js","App.js","reportWebVitals.js","index.js"],"names":["Node","props","useState","position","setPosition","labelX","labelY","useEffect","style","userSelect","onMouseDown","e","dragStart","id","onMouseUp","dragEnd","cx","cy","r","stroke","stroke-width","fill","pointerEvents","textAnchor","transform","fontSize","dist","a","b","Math","sqrt","pow","Edge","c","d","node1","setNode1","node2","setNode2","bendPos","setBendPos","bent","posX","posY","points","A","B","C","angle","acos","K","sin","round","laf","PI","saf","join","calcCirclePath","pointer-events","shape-rendering","GraphVisual","mouseIn","setMouseIn","dragId","setDragId","isDraggingNode","setIsDraggingNode","isDraggingEdge","setIsDraggingEdge","originX","setOriginX","originY","setOriginY","prevPosition","setPrevPosition","node","deletingVertex","deleteVertex","clientX","clientY","vertices","bendPositions","get","edges","dragging","newX","newY","updateData","updateBendPositions","newVertices","slice","setVertices","newBendPositions","Map","set","setBendPositions","height","width","backgroundColor","onMouseOver","onMouseLeave","onMouseMove","forEach","edge","push","updateEdges","map","InputGraph","addEdge","v1","v2","test","Number","isInteger","length","key","console","log","this","i","valid","errors","neighbor","withRouter","email","setEmail","emailError","setEmailError","sent","setSent","graphSaved","setGraphSaved","graphRetrieved","setGraphRetrieved","failedRetrieve","setFailedRetrieve","window","location","href","modal","authenticate","String","toLowerCase","validateEmail","fetch","method","body","JSON","stringify","headers","then","response","json","msg","exit","setModal","successfullyRetrieved","Fragment","marginTop","message","type","showIcon","successfullySaved","unsuccessfulRetrieve","loggedIn","footer","onClick","logOut","top","bodyStyle","minHeight","title","visible","onOk","onCancel","display","justifyContent","marginBottom","flexWrap","margin","fontWeight","localStorage","getItem","Array","from","entries","parse","bp","bentpos","setGraph","getProfile","marginRight","name","Item","label","onChange","target","value","getLogin","Inputs","showProperties","setShowProperties","showInput","setShowInput","properties","setProperties","editEdge","setEditEdge","setDeleteEdge","setAddEdge","addEdgeValidStatus1","setAddEdgeValidStatus1","addEdgeValidStatus2","setAddEdgeValidStatus2","setV1","setV2","verticesInput","setVerticesInput","vertexMessage","setVertexMessage","setEdges","edgesMessage","setEdgesMessage","profileModal","setProfileModal","options1","options2","options3","addEdges","inputGraph","clearInput","addOrDeleteEdge","bool","success","deleteEdge","k","marginLeft","straightenEdges","centerGraph","bottom","UserOutlined","logIn","m","addVertices","validateStatus","help","onPressEnter","autoComplete","min","max","defaultValue","newEdges","split","hasVertexCount","getGraphInput","content","data","item","Group","options","getProperties","initialValues","remember","getEditEdge","right","padding","setDeletingVertex","setAddingVertex","Error","Data","updating","setUpdating","edgesMap","bdMap","addingVertex","tryAddVertex","addVertex","x","y","idx","v","substr1","substr","indexOf","substr2","newKey","newVal","newBendVal","deleteVertexHelper","splice","has","deleteEdgeTest","delete","vertex","innerWidth","setWidth","handleResize","addEventListener","removeEventListener","overflow","login","logout","useLocation","pathname","replace","setMessage","status","search","Routes","setLoggedIn","setItem","exact","path","removeItem","component","to","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a033956b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {useState, useEffect, useRef} from 'react'\n\nexport default function Node(props) {\n    const [position, setPosition] = useState(props.position);\n    \n    const labelX = position[0];\n    const labelY = position[1];\n\n    useEffect(() => {\n        setPosition(props.position);\n    }, [props.position])\n\n    return (\n        <g style={{userSelect:\"none\"}} onMouseDown={e => props.dragStart(e, props.id, true)} onMouseUp={(e) => props.dragEnd(e)}>\n            <circle cx={labelX} cy={labelY} r=\"40\" stroke=\"#2ab863\" stroke-width=\"4\" fill=\"#ccffcf\"/>\n            <text pointerEvents={\"none\"} textAnchor=\"middle\" transform={`translate(${labelX}, ${labelY + 5})`} fontSize=\"20\">{props.id}</text>\n        </g>\n    )\n}","import React, {useState, useEffect} from 'react'\n\nfunction Edge(props) {\n    const [node1, setNode1] = useState(props.node1);\n    const [node2, setNode2] = useState(props.node2);\n    const [bendPos, setBendPos] = useState(props.bendPos);\n\n    let c;\n    let d;\n    if(props.bendPos.bent === false) {\n        c = [(node1.posX + node2.posX)/2, (node1.posY + node2.posY)/2];\n        d = \"M \" + node1.posX + \" \" + node1.posY + \" Q \" + c[0] + \" \" + c[1] + \" \" + node2.posX + \" \" + node2.posY;\n    } else {\n        c = [props.bendPos.posX, props.bendPos.posY];\n        d = calcCirclePath([[node2.posX, node2.posY], c, [node1.posX, node1.posY]]);\n    }\n\n    useEffect(() => {\n        setNode1(props.node1); setNode2(props.node2);\n        setBendPos(props.bendPos);\n    }, [props.node1, props.node2, props.bendPos])\n\n    return (\n        <svg>\n            <svg>\n                <circle onMouseDown={(e) => {props.dragStart(e, props.id, false);}} onMouseUp={(e) => props.dragEnd(e)} cx={c[0]} cy={c[1]} r={6}/>\n            </svg>\n            <svg>\n                <path pointer-events=\"none\" d={d} stroke=\"black\" fill=\"transparent\" stroke-width=\"3\" shape-rendering=\"geometricPrecision\"/>\n            </svg>\n        </svg>\n    )\n}\n\nfunction calcCirclePath(points){\n    var a = points[0]\n    var b = points[2]\n    var c = points[1]\n  \n    var A = dist(b, c)\n    var B = dist(c, a)\n    var C = dist(a, b)\n  \n    var angle = Math.acos((A*A + B*B - C*C)/(2*A*B))\n  \n    //calc radius of circle\n    var K = .5*A*B*Math.sin(angle)\n    var r = A*B*C/4/K\n    r = Math.round(r*1000)/1000\n  \n    //large arc flag\n    var laf = +(Math.PI/2 > angle)\n  \n    //sweep flag\n    var saf = +((b[0] - a[0])*(c[1] - a[1]) - (b[1] - a[1])*(c[0] - a[0]) < 0) \n  \n    return ['M', a, 'A', r, r, 0, laf, saf, b].join(' ')\n  }\n  \n  function dist(a, b){\n    return Math.sqrt(\n      Math.pow(a[0] - b[0], 2) +\n      Math.pow(a[1] - b[1], 2))\n  }\n\nexport default Edge\n","import React, {useState, useEffect, useRef} from 'react';\nimport Node from './Node';\nimport Edge from './Edge';\n\nexport default function GraphVisual(props) {\n    const [mouseIn, setMouseIn] = useState(false);\n    const [dragId, setDragId] = useState();\n    const [isDraggingNode, setIsDraggingNode] = useState(false);\n    const [isDraggingEdge, setIsDraggingEdge] = useState(false);\n\n    const [originX, setOriginX] = useState(0);\n    const [originY, setOriginY] = useState(0);\n    const [prevPosition, setPrevPosition] = useState([]);\n\n    const dragStart = (e, id, node) => {\n        if(mouseIn === true) {\n            if(props.deletingVertex) {\n                props.deleteVertex(id);\n                return;\n            }\n            setDragId(id);\n            setOriginX(e.clientX);\n            setOriginY(e.clientY);\n\n            if(node) {\n                setIsDraggingNode(true);\n                setPrevPosition([props.vertices[id].posX, props.vertices[id].posY]);\n            } else {\n                setIsDraggingEdge(true);\n                if(props.bendPositions.get(id).bent === true) {\n                    setPrevPosition([props.bendPositions.get(id).posX, props.bendPositions.get(id).posY]);\n                } else {  \n                    let node1 = props.vertices[props.edges.get(id).node1];\n                    let node2 = props.vertices[props.edges.get(id).node2];\n                    setPrevPosition([(node1.posX + node2.posX) / 2, (node1.posY + node2.posY) / 2]);\n                }\n            }\n        }\n    }\n\n    const dragging = (e) => {\n        if(isDraggingNode && mouseIn) {\n            let newX = e.clientX - originX;\n            let newY =  e.clientY - originY;\n            updateData({\n                \"id\": dragId, \n                \"posX\": prevPosition[0] + newX, \n                \"posY\": prevPosition[1] + newY\n            });\n        } else if(isDraggingEdge && mouseIn) {\n            let newX = e.clientX - originX;\n            let newY =  e.clientY - originY;\n            updateBendPositions({\n                \"id\": dragId, \n                \"posX\": prevPosition[0] + newX, \n                \"posY\": prevPosition[1] + newY,\n                \"bent\": true\n            });\n        }\n    }\n\n    const dragEnd = () => {\n        setIsDraggingNode(false);\n        setIsDraggingEdge(false);\n    }\n\n    const updateData = (a) => {\n        let newVertices = props.vertices.slice(0);\n        newVertices[a.id] = a;\n        props.setVertices(newVertices);\n    }\n\n    const updateBendPositions = (a) => {\n        let newBendPositions = new Map(props.bendPositions.set(a.id, a));\n        props.setBendPositions(newBendPositions);\n    }\n\n    const updateVertices = (a) => {\n        return props.vertices.map(node => {\n            return (<Node dragStart={dragStart} dragEnd={dragEnd} id={node.id} position={[node.posX, node.posY]}/>);\n        })\n    }\n\n    const updateEdges = (a) => {\n        let e = [];\n        props.edges.forEach((edge) => {\n            e.push(<Edge dragStart={dragStart} dragEnd={dragEnd} id={edge.id} node1={props.vertices[edge.node1]} \n                    node2={props.vertices[edge.node2]} bendPos={props.bendPositions.get(edge.id)}/>)\n        })\n        return e;\n    }\n\n    useEffect(() => {}, [props.vertices, props.bendPositions, props.bendPositions, props.edges, props.vertices])\n\n    return (\n        <svg style={{height:\"600vh\", width:\"600vw\", backgroundColor: '#dbedff'}} \n            onMouseOver={() => {setMouseIn(true)}} onMouseLeave={(e) => {dragging(e); setMouseIn(false); dragEnd()}}\n            onMouseMove={(e) => {dragging(e)}} onMouseUp={() => dragEnd()}>\n            {updateEdges()}\n            {updateVertices()}\n        </svg>\n    )\n}\n\n","export default class InputGraph {\n    constructor(vertices, edges) {\n        console.log(edges);\n        this.vertices = [];\n        for(let i = 0; i < vertices; ++i) {\n            this.vertices.push({\"id\": i, \"posX\": 500, \"posY\": 500});\n        }\n\n        this.edges = new Map;\n        this.bendPositions = new Map;\n        this.valid = true;\n        this.errors = [];\n        for(let i = 0; i < edges.length; ++i) {\n            this.errors.push(\"none\");\n            for(let neighbor of edges[i]) {\n                if(!this.addEdge(i, neighbor)) {\n                    this.valid = false;\n                    this.errors[i] = (\"error\");\n                    break;\n                } else if (neighbor === \"\") {\n                    this.errors[i] = (\"error\");\n                }\n            }\n        }\n    }\n\n    addEdge = (v1, v2) => {\n        if(!(/^\\d+$/.test(v1)) || !(/^\\d+$/.test(v2))) {\n            return false;\n        }\n\n        v1 = Number(v1);\n        v2 = Number(v2);\n        if(!(Number.isInteger(v1)) || v1 > this.vertices.length - 1) {\n            return false;\n        }\n        if(!(Number.isInteger(v2)) || v2 > this.vertices.length - 1) {\n            return false;\n        }\n\n        if(v1 == v2) {\n            return false;\n        }\n        \n        let key;\n        if(v1 > v2) {\n            key = v2 + \".\" + v1;\n        } else {\n            key = v1 + \".\" + v2;\n        }\n        \n        this.edges.set(key, {\n            \"id\": key,\n            \"node1\": v1,\n            \"node2\": v2,\n            \"bent\": false,\n            \"posX\": null,\n            \"posY\": null\n        });\n\n\n        this.bendPositions.set(key, {\n            \"id\": key,\n            \"bent\": false,\n            \"posX\": null,\n            \"posY\": null\n        });\n\n        return true;\n    }\n\n}","import React, {useEffect, useState} from 'react'\nimport { Alert, Button, Modal, Input, Form, InputNumber } from 'antd';\nimport { useLocation, withRouter } from 'react-router-dom'\nimport axios from 'axios';\n\nfunction Profile(props) {\n    const [email, setEmail] = useState();\n    const [emailError, setEmailError] = useState(false);\n    const [sent, setSent] = useState(false);\n    const [graphSaved, setGraphSaved] = useState(false);\n    const [graphRetrieved, setGraphRetrieved] = useState(false);\n    const [failedRetrieve, setFailedRetrieve] = useState(false);\n    const [location, setLocation] = useState(window.location.href);\n \n    useEffect(() => {}, [props.modal]);\n\n    function validateEmail(email) {\n        const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        return re.test(String(email).toLowerCase());\n    }\n\n    const authenticate = (email) => {\n        console.log(location)\n        if(validateEmail(email)) {\n            fetch('https://graphtt.herokuapp.com/login', {\n                method: 'POST',\n                body: JSON.stringify({\n                    'email': email, // change here\n                    'route': location\n                }),\n                headers: {\n                    \"Content-type\": \"application/json\"\n                }\n            }).then(response => response.json()).then(msg => setSent(true))\n        } else {\n            setEmailError(true);\n        }\n    }\n\n    const getGraph = () => {\n        if(props.loggedIn == true) {\n            fetch('https://graphtt.herokuapp.com/api/retrieve', {\n                method: 'POST',\n                body: JSON.stringify({\n                    'type': \"retrieve\",\n                    'email': localStorage.getItem(\"email\")\n                }),\n                headers: {\n                    \"Content-type\": \"application/json\"\n                }\n            }).then(response => response.json()).then(msg => {console.log(msg); setGraphRetrieved(true)\n                let e = new Map(JSON.parse(msg.edges));\n                let bp = new Map(JSON.parse(msg.bentpos));\n                props.setGraph(e, JSON.parse(msg.vertices), bp);\n            })\n        }\n    }\n\n    const saveGraph = () => {\n        console.log(props.bendPositions)\n        if(props.loggedIn == true) {\n            fetch('https://graphtt.herokuapp.com/api/upload', {\n                method: 'POST',\n                body: JSON.stringify({\n                    'type': \"upload\",\n                    'email': localStorage.getItem(\"email\"),\n                    'edges': JSON.stringify(Array.from(props.edges.entries())),\n                    'vertices': JSON.stringify(props.vertices),\n                    'bentpos': JSON.stringify(Array.from(props.bendPositions.entries()))\n                }),\n                headers: {\n                    \"Content-type\": \"application/json\"\n                }\n            }).then(response => response.json()).then(msg => {setGraphSaved(true)})\n        }\n    }\n\n    const exit = () => {\n        props.setModal(false); setEmailError(false); setSent(false); setGraphRetrieved(false); setGraphSaved(false); setFailedRetrieve(false);\n    }\n\n    const getProfile = () => {\n        let footer = (\n            <React.Fragment>\n                <Button key=\"back\" onClick={() => {exit()}}>\n                    Return\n                </Button>\n                <Button type=\"primary\" key=\"back\" onClick={() => {exit(); props.logOut()}}>\n                    Log out\n                </Button>\n            </React.Fragment>\n        )\n\n        return (\n            <Modal style={{top: \"22%\"}} width={\"550px\"} bodyStyle={{minHeight:\"120px\"}} title=\"Logged into kevin.hk.or2010@gmail.com\" visible={props.modal} \n                    onOk={() => {exit()}} onCancel={() => {exit()}}\n                    footer={footer}>\n                <div style={{display:'flex', width:\"100%\", justifyContent:\"center\", marginBottom:\"5px\", marginTop:\"-15px\", flexWrap:\"wrap\"}}>\n                    <div style={{display:\"flex\", flexWrap:'wrap', justifyContent:\"center\", width:\"220px\"}}>\n                        <div style={{margin:\"14px\", fontSize:\"18px\", fontWeight:\"480\"}}>Save current graph:</div>\n                        <Button type=\"primary\" onClick={() => {saveGraph(); setGraphSaved(false); setGraphRetrieved(false); setFailedRetrieve(false)}}>\n                            Save Graph\n                        </Button>\n                    </div>\n                    <div style={{display:\"flex\", flexWrap:'wrap', justifyContent:\"center\", width:\"220px\"}}>\n                        <div style={{margin:\"14px\", fontSize:\"18px\", fontWeight:\"480\"}}>Retrieve saved graph:</div>\n                        <Button type=\"primary\" onClick={() => {getGraph(); setGraphSaved(false); setGraphRetrieved(false); setFailedRetrieve(false)}}>\n                            Retrieve Graph\n                        </Button>\n                    </div>\n                    <div style={{marginTop:\"45px\", marginBottom:\"-15px\"}}>(Currently this feature is limited to 1 graph per user)</div>\n                </div>\n                {graphSaved ? successfullySaved() : <React.Fragment/>}\n                {graphRetrieved ? successfullyRetrieved() : <React.Fragment/>}\n                {failedRetrieve ? unsuccessfulRetrieve() : <React.Fragment/>}\n            </Modal>\n        )\n    }\n\n    const sentMessage = () => {\n        return (\n            <React.Fragment>\n                <div style={{height:\"40px\", width:\"100%\", marginTop:\"23px\"}}>\n                    <Alert message={\"Email successfully sent to \" + email} type=\"success\" showIcon/>\n                </div>\n            </React.Fragment>\n        )\n    }\n\n    const emailErrorMessage = () => {\n        return (\n            <React.Fragment>\n                <div style={{height:\"40px\", width:\"100%\", marginTop:\"23px\"}}>\n                    <Alert message=\"Invalid Email\" type=\"error\" showIcon />\n                </div>\n            </React.Fragment>\n        )\n    }\n\n    const successfullyRetrieved = () => {\n        return (\n            <React.Fragment>\n                <div style={{height:\"40px\", width:\"100%\", marginTop:\"25px\"}}>\n                    <Alert message={\"Graph successfully retrieved\"} type=\"success\" showIcon/>\n                </div>\n            </React.Fragment>\n        )\n    }\n\n    const successfullySaved = () => {\n        return (\n            <React.Fragment>\n                <div style={{height:\"40px\", width:\"100%\", marginTop:\"25px\"}}>\n                    <Alert message={\"Graph successfully saved\"} type=\"success\" showIcon/>\n                </div>\n            </React.Fragment>\n        )\n    }\n\n    const unsuccessfulRetrieve = () => {\n        return (\n            <React.Fragment>\n                <div style={{height:\"40px\", width:\"100%\", marginTop:\"25px\"}}>\n                    <Alert message=\"No graph to retrieve. Save a graph first!\" type=\"error\" showIcon />\n                </div>\n            </React.Fragment>\n        )\n    }\n\n    const getLogin = () => {\n        let footer = (\n            <React.Fragment>\n                <Button key=\"back\" onClick={() => {exit()}} style={{marginTop:\"10px\", marginBottom:\"10px\", marginRight:\"46%\"}}>\n                    Return\n                </Button>\n                <Button type=\"primary\" key=\"back\" onClick={() => {authenticate(email)}}>\n                    Send Confirmation Email\n                </Button>\n            </React.Fragment>\n        )\n\n        return (\n            <Modal style={{top: \"22%\"}} width={\"550px\"} bodyStyle={{minHeight:\"100px\"}} title=\"Log In To Save Graphs\" visible={props.modal} \n                    onOk={() => {exit()}} onCancel={() => {exit()}}\n                    footer={footer} onClick={() => setEmailError(false)}>\n                <div onClick={() => {setEmailError(false);}}>\n                <Form name=\"basic\" style={{height:\"30px\"}}>\n                    <Form.Item\n                        label=\"Email\"\n                        name=\"email\"\n                    >\n                        <Input onChange={(e) => {setEmail(e.target.value)}}/>\n                    </Form.Item>\n                </Form>\n                {sent ? sentMessage() : <React.Fragment/>}\n                {emailError ? emailErrorMessage() : <React.Fragment/>}\n                </div>\n            </Modal>\n        )\n    }\n\n    return (\n        <React.Fragment>\n            {props.loggedIn == true ?  getProfile() : getLogin()}\n        </React.Fragment>\n    )\n}\n\nexport default withRouter(Profile)\n","import React, {useState, useEffect} from 'react'\nimport InputGraph from './InputGraph'\nimport { Button, Modal, Checkbox, Input, Form, InputNumber } from 'antd';\nimport {UserOutlined} from '@ant-design/icons'\nimport Profile from './Profile.js'\n\n\n\n// Will Refactor Soon\n\n\n\nexport default function Inputs(props) {\n    const [showProperties, setShowProperties] = useState(false);\n    const [showInput, setShowInput] = useState(false);\n    const [properties, setProperties] = useState([{\"id\": \"cycles\", \"value\": \"5\"}]);\n\n    const [editEdge, setEditEdge] = useState(false);\n    const [deleteEdge, setDeleteEdge] = useState(false);\n    const [addEdge, setAddEdge] = useState(false);\n    const [addEdgeValidStatus1, setAddEdgeValidStatus1] = useState(\"none\");\n    const [addEdgeValidStatus2, setAddEdgeValidStatus2] = useState(\"none\");\n\n    const [v1, setV1] = useState(\"\");\n    const [v2, setV2] = useState(\"\");\n\n    const [verticesInput, setVerticesInput] = useState(1);\n    const [vertices, setVertices] = useState(0);\n    const [vertexMessage, setVertexMessage] = useState();\n    const [edges, setEdges] = useState();\n    const [edgesMessage, setEdgesMessage] = useState();\n\n    const [profileModal, setProfileModal] = useState(false);\n\n    const options1 = [\"Components\", \"Hamiltonian Cycles\"];\n    const options2 = [\"Spanning Trees\", \"Euler Tours\"];\n    const options3 = [\"Planarity\", \"Longest/Shortest Cycles\"];\n\n    const addVertices = () => {\n        setVertices(verticesInput);\n        let k = Array(verticesInput);\n        k.fill([]);\n        setEdges(k);\n        let m = Array(verticesInput);\n        m.fill(\"none\")\n        setEdgesMessage(m);\n    }\n\n    const addEdges = () => {\n        let inputGraph = new InputGraph(vertices, edges);\n        if(inputGraph.valid === true) {\n            props.setGraph(inputGraph.edges, inputGraph.vertices, inputGraph.bendPositions);\n            clearInput();\n        } else {\n            setEdgesMessage(inputGraph.errors);\n        }\n    }\n\n    const clearInput = () => {\n        setVertices(0);\n        setShowInput(false); \n        setVertexMessage(\"none\");\n        setEdges();\n        setEdgesMessage();\n    }\n\n    const getGraphInput = () => {\n        const footer = (\n            <React.Fragment>\n                <Button key=\"back\" onClick={() => {clearInput()}}>\n                    Cancel\n                </Button>\n                <Button type=\"primary\" onClick={() => {\n                        vertices === 0 ? addVertices() : addEdges();\n                    }\n                }>\n                    {vertices === 0 ? \"Continue\" : \"Input Graph\"}\n                </Button>\n            </React.Fragment>\n        )\n\n        const hasVertexCount = () => {\n            if(vertices === 0) {\n                return (\n                    <Form.Item\n                        label=\"Number of Vertices (Max 20)\"\n                        name=\"v1\"\n                        validateStatus={addEdgeValidStatus1}\n                        help={vertexMessage === \"error\" ? \"Invalid Input\" : null}\n                    >\n                        <InputNumber onPressEnter={(e) => {setVertices(verticesInput)}} autoComplete=\"off\" onChange={(value) => setVerticesInput(value)} \n                                    min={1} max={20} defaultValue={1}/>\n                    </Form.Item>\n                )\n            } else {\n                let k = [];\n                for(let i = 0; i < vertices; ++i) {\n                    k.push(\n                        <Form.Item\n                            validateStatus={edgesMessage[i]}\n                            help={edgesMessage[i] === \"error\" ? \"Invalid Input\" : null}\n                            label={JSON.stringify(i)}\n                        >\n                            <Input defaultValue=\"\" style={{width:\"70px\", margin:\"2px\"}} onPressEnter={(e) => {addEdges()}} autoComplete=\"off\" onChange={(e) => \n                                    {let newEdges = [...edges]; newEdges[i] = (e.target.value).split(\" \").join(\"\").split(\",\"); setEdges(newEdges);}} />\n                        </Form.Item>\n                    )\n                }\n                return (\n                    <React.Fragment>\n                        <div style={{marginTop:\"-15px\", marginBottom:\"35px\"}}>Edges (adjacency list, seperating neighbors of each vertex with commas)</div>\n                        <div style={{display:\"flex\", width:\"350px\", marginLeft:\"auto\", marginRight:\"auto\", flexWrap:\"wrap\", justifyContent:\"space-around\"}}>\n                            {k}\n                        </div>\n                    </React.Fragment>\n                )\n            }\n        }\n\n        return (\n            <Modal style={{top: \"10%\"}} title=\"Input Graph\" visible={showInput} onCancel={() => {clearInput()}} footer={footer}>\n                 <div style={{display:\"flex\", width:\"100%\", justifyContent:\"center\", marginTop:\"10px\", marginBottom:\"-5px\", marginLeft:\"-10px\"}}>\n                    <Form\n                        onMouseDown={() => {setAddEdgeValidStatus1(\"none\")}}\n                        >\n                        {hasVertexCount()}\n                    </Form>\n                 </div>\n            </Modal>\n        )\n    }\n\n    const getProperties = () => {\n        let content;\n        let footer;\n        if(properties.length > 0) {\n            const data = properties.map((item) => {\n                return <p>{item.id + \" \" + item.value}</p>\n            })\n\n            content = (\n                <React.Fragment>\n                    {data}\n                </React.Fragment>\n            )\n\n            footer = (\n                <React.Fragment>\n                    <Button type=\"primary\" style={{marginRight:\"32%\"}} onClick={() => setProperties([])}>Generate Different Properties</Button>\n                    <Button key=\"back\" onClick={() => {setShowProperties(false)}}>\n                        Return\n                    </Button>\n                    <Button key=\"submit\" type=\"primary\" onClick={() => {setShowProperties(false)}}>\n                        Confirm\n                    </Button>\n                </React.Fragment>\n            )\n        } else {\n            content = (\n                <div style={{display:\"flex\", justifyContent:\"center\"}}>\n                    <Checkbox.Group style={{display:\"flex\", width:\"180px\", flexWrap:\"wrap\"}} options={options1} />\n                    <Checkbox.Group style={{display:\"flex\", width:\"180px\", flexWrap:\"wrap\"}} options={options2} />\n                    <Checkbox.Group style={{display:\"flex\", width:\"180px\", flexWrap:\"wrap\"}} options={options3} />\n                </div>\n            )\n        }\n        return (\n            <Modal style={{top: \"25%\"}} width={\"600px\"} bodyStyle={{minHeight:\"200px\"}} title=\"Graph Properties\" visible={showProperties} onOk={() => {setShowProperties(false)}} onCancel={() => {setShowProperties(false)}}\n                    footer={footer}>\n                {content}\n            </Modal>\n        )\n    }\n\n    const addOrDeleteEdge = (bool) => {\n        if(v1 !== \"\" && v2 !== \"\") {\n            let success;\n            if(bool) {\n                success = props.addEdge(v1, v2);\n            } else {\n                success = props.deleteEdge(v1, v2);\n            }\n            setAddEdgeValidStatus1(success[0]);\n            setAddEdgeValidStatus2(success[1]);\n            return success;\n        } else {\n            let k = [];\n            if(v1 === \"\") {\n                k.push(\"error\")\n            } else {\n                k.push(\"none\")\n            }\n\n            if(v2 === \"\") {\n                k.push(\"error\")\n            } else {\n                k.push(\"none\");\n            }\n            setAddEdgeValidStatus1(k[0]);\n            setAddEdgeValidStatus2(k[1]);\n            return k;\n        }\n    }\n\n    const getEditEdge = () => {\n        const footer = (\n            <React.Fragment>\n                <Button key=\"back\" onClick={() => {setEditEdge(false); setAddEdge(false); setDeleteEdge(false)}}>\n                    Return\n                </Button>\n                <Button type=\"primary\" onClick={() => {\n                        addEdge ? addOrDeleteEdge(true) : addOrDeleteEdge(false)\n                    }\n                }>\n                    {addEdge ? \"Add Edge\" : \"Delete Edge\"}\n                </Button>\n            </React.Fragment>\n        )\n\n        return (\n            <Modal style={{top: \"25%\"}} title={addEdge ? \"Add Edge\" : \"Delete Edge\"} visible={editEdge} onCancel={() => {setEditEdge(false); setAddEdge(false); setDeleteEdge(false);\n                    setAddEdgeValidStatus1(\"none\"); setAddEdgeValidStatus2(\"none\")}} footer={footer}>\n                 <div style={{display:\"flex\", width:\"100%\", justifyContent:\"center\", marginTop:\"10px\", marginBottom:\"-5px\", marginLeft:\"-10px\"}}>\n                    <Form\n                        initialValues={{ remember: true }}\n                        onMouseDown={() => {setAddEdgeValidStatus1(\"none\"); console.log(\"?\")\n                        setAddEdgeValidStatus2(\"none\")}}\n                        >\n                        <Form.Item\n                            label=\"Vertex 1\"\n                            name=\"v1\"\n                            validateStatus={addEdgeValidStatus1}\n                            help={addEdgeValidStatus1 === \"error\" ? \"Invalid Input\" : null}\n                        >\n                            <Input onPressEnter={(e) => {addEdge ? addOrDeleteEdge(true) : addOrDeleteEdge(false)}} autoComplete=\"off\" onChange={(e) => setV1(e.target.value)} />\n                        </Form.Item>\n                        <Form.Item\n                            validateStatus={addEdgeValidStatus2}\n                            help={addEdgeValidStatus2 === \"error\" ? \"Invalid Input\" : null}\n                            label=\"Vertex 2\"\n                            name=\"v2\"\n                        >\n                            <Input onPressEnter={(e) => {addEdge ? addOrDeleteEdge(true) : addOrDeleteEdge(false)}} autoComplete=\"off\" onChange={(e) => setV2(e.target.value)} />\n                        </Form.Item>\n                    </Form>\n                 </div>\n            </Modal>\n        )\n    }\n\n    return (\n        <React.Fragment>\n            <div style={{position:\"absolute\", display:\"flex\", marginTop:\"20px\", marginLeft:\"20px\"}} >\n                <Button style={{margin: \"8px\", height:\"35px\", width:\"150px\", fontSize:\"15px\"}} type=\"primary\" onClick={() => setShowInput(true)}>Input Graph</Button>\n                <Button style={{margin: \"8px\", height:\"35px\", width:\"150px\", fontSize:\"15px\"}} type=\"primary\" onClick={() => {props.straightenEdges()}}>Straighten Edges</Button>\n                <Button style={{margin: \"8px\", height:\"35px\", width:\"150px\", fontSize:\"15px\"}} type=\"primary\" onClick={() => setShowProperties(true)}>Graph Properties</Button>\n                <Button style={{margin: \"8px\", height:\"35px\", width:\"150px\", fontSize:\"15px\"}} type=\"primary\" onClick={() => props.centerGraph()}>Center Graph</Button>\n            </div>\n            <div style={{position:\"absolute\", marginLeft:\"25px\", bottom:\"calc(6vh + 15px)\"}}>\n                <Button style={{width:\"55px\", height:\"45px\"}} type=\"primary\" onClick={() => setProfileModal(true)}>\n                    <UserOutlined style={{}}/>\n                </Button>\n            </div>\n            <Profile modal={profileModal} setModal={setProfileModal} loggedIn={props.loggedIn} logIn={props.logIn} logOut={props.logOut}\n                    edges={props.edges} vertices={props.vertices} bendPositions={props.bendPositions} setGraph={props.setGraph}\n                    />\n            {getGraphInput()}\n            {getProperties()}\n            {getEditEdge()}\n            <div style={{position:\"absolute\", display:\"flex\", right:\"3%\", bottom:\"6%\", flexWrap:\"wrap\", width:\"125px\"}}>\n                <Button style={{margin:\"8px\", height:\"45px\", width:\"95px\", fontSize:\"15px\", padding:\"0px\"}} type=\"primary\" \n                        onClick={() => {setDeleteEdge(true); setEditEdge(true);}}>\n                    Delete Edge\n                </Button>\n                <Button style={{margin:\"8px\", height:\"45px\", width:\"95px\", fontSize:\"15px\", padding:\"0px\"}} type=\"primary\" \n                        onClick={() => {props.setDeletingVertex(true)}}>\n                    Delete Node\n                </Button>\n                <Button style={{margin:\"8px\", height:\"45px\", width:\"95px\", fontSize:\"15px\", padding:\"0px\"}} type=\"primary\" \n                    onClick={() => {setAddEdge(true); setEditEdge(true)}}>\n                    Add Edge\n                </Button>\n                <Button style={{margin:\"8px\", height:\"45px\", width:\"95px\", fontSize:\"15px\", padding:\"0px\"}} type=\"primary\" \n                    onClick={() => {props.setAddingVertex(true)}}>\n                    Add Node\n                </Button>\n            </div>\n        </React.Fragment>\n    )\n}\n","import React from 'react'\nimport {Alert} from 'antd'\n\nexport default function Error() {\n    return (\n        <div style={{width:\"100%\", height:\"100%\"}}>\n            <Alert message=\"Mobile view is still under construction! Please check in later (for now, please use the app on pc view - apologies for any inconveniences)\" type=\"warning\" showIcon  />\n        </div>\n    )\n}\n","import React, {useEffect, useState} from 'react'\nimport Inputs from '../../display/input/Inputs.js'\nimport GraphVisual from '../graphs/GraphVisual.js'\nimport Error from '../error/Error.js'\n\nexport default function Data(props) {\n    let tvertices = [{\n        \"id\": 0,\n        \"posX\": 850,\n        \"posY\": 200\n    }, {\n        \"id\": 1,\n        \"posX\": 1150,\n        \"posY\": 400\n    }, {\n        \"id\": 2,\n        \"posX\": 550,\n        \"posY\": 400\n    }, {\n        \"id\": 3,\n        \"posX\": 1050,\n        \"posY\": 720\n    }, {\n        \"id\": 4,\n        \"posX\": 650,\n        \"posY\": 720\n    }]\n\n    const [updating, setUpdating] = useState(false);\n    const [vertices, setVertices] = useState(null)\n\n    const edgesArray = [{\n        \"id\": \"0.1\",\n        \"node1\": 0,\n        \"node2\": 1,\n        \"bent\": false,\n        \"posX\": null,\n        \"posY\": null\n    }, {\n        \"id\": \"1.2\",\n        \"node1\": 1,\n        \"node2\": 2,\n        \"bent\": false,\n        \"posX\": null,\n        \"posY\": null\n    }, {\n        \"id\": \"1.3\",\n        \"node1\": 1,\n        \"node2\": 3,\n        \"bent\": false,\n        \"posX\": null,\n        \"posY\": null\n    }, {\n        \"id\": \"0.2\",\n        \"node1\": 0,\n        \"node2\": 2,\n        \"bent\": false,\n        \"posX\": null,\n        \"posY\": null\n    }, {\n        \"id\": \"0.3\",\n        \"node1\": 0,\n        \"node2\": 3,\n        \"bent\": false,\n        \"posX\": null,\n        \"posY\": null\n    }, {\n        \"id\": \"2.3\",\n        \"node1\": 2,\n        \"node2\": 3,\n        \"bent\": false,\n        \"posX\": null,\n        \"posY\": null\n    }, {\n        \"id\": \"0.4\",\n        \"node1\": 0,\n        \"node2\": 4,\n        \"bent\": false,\n        \"posX\": null,\n        \"posY\": null\n    }, {\n        \"id\": \"1.4\",\n        \"node1\": 1,\n        \"node2\": 4,\n        \"bent\": false,\n        \"posX\": null,\n        \"posY\": null\n    }, {\n        \"id\": \"2.4\",\n        \"node1\": 2,\n        \"node2\": 4,\n        \"bent\": false,\n        \"posX\": null,\n        \"posY\": null\n    }, {\n        \"id\": \"3.4\",\n        \"node1\": 3,\n        \"node2\": 4,\n        \"bent\": false,\n        \"posX\": null,\n        \"posY\": null\n    }]\n\n    let edgesMap = new Map();\n    let bdMap = new Map();\n\n    edgesArray.forEach(edge => {\n        edgesMap.set(edge.node1 + \".\" + edge.node2, edge);\n        bdMap.set(edge.node1 + \".\" + edge.node2, {\"id\": edge.id, \"bent\":edge.bent, \"posX\": edge.posX, \"posY\":edge.posY});\n    })\n\n    const [edges, setEdges] = useState(null);\n    const [addingVertex, setAddingVertex] = useState(false);\n    const [deletingVertex, setDeletingVertex] = useState(false);\n    const [bendPositions, setBendPositions] = useState(null);\n\n    const setGraph = (edges, vertices, bp) => {\n        setUpdating(true);\n        setVertices(vertices);\n        setEdges(edges);\n        setBendPositions(bp);\n    }\n\n    if(vertices === null) {\n        setGraph(edgesMap, tvertices, bdMap)\n    }\n\n    const tryAddVertex = (e) => {\n        if(addingVertex && vertices.length <= 30) {\n            addVertex(e.clientX - 45, e.clientY - 10)\n        }\n        setAddingVertex(false);\n    }\n\n    const addVertex = (x, y) => {\n        vertices.push({\"id\": vertices.length, \"posX\": x, \"posY\":y});\n    }\n\n    const straightenEdges = () => {\n        edges.forEach(edge => {\n            bdMap.set(edge.node1 + \".\" + edge.node2, {\"id\": edge.id, \"bent\":false, \"posX\": 0, \"posY\": 0});\n        })\n\n        setBendPositions(bdMap);\n    }\n\n    const deleteVertex = (idx) => {\n        let newEdges = new Map();\n        let newBendPositions = new Map();\n        edges.forEach((v) => {\n            let key = v.id;\n            let substr1 = Number(key.substr(0, key.indexOf('.')));\n            let substr2 = Number(key.substr(key.indexOf('.') + 1, key.length - 1));\n\n            if(substr1 !== idx && substr2 !== idx) {\n                if(substr1> idx) --substr1;\n                if(substr2 > idx) --substr2;\n\n                let newKey = substr1 + \".\" + substr2;\n                let newVal = v;\n                newVal[\"id\"] = newKey;\n                newVal[\"node1\"] = substr1;\n                newVal[\"node2\"] = substr2;\n                let newBendVal = bendPositions.get(key);\n                newBendVal[\"id\"] = newKey;\n\n                newEdges.set(substr1 + \".\" + substr2, newVal);\n                newBendPositions.set(substr1 + \".\" + substr2, newBendVal);\n            }\n        })\n        setEdges(newEdges);\n        setBendPositions(newBendPositions);\n        setDeletingVertex(false);\n        deleteVertexHelper(idx)\n    }\n\n    const deleteVertexHelper = (idx) => {\n        let k = vertices;\n        k.splice(idx, 1);\n        for(let i = idx; i < k.length; ++i) {\n            --k[i].id;\n        }\n        setVertices(k);\n    }\n\n    const deleteEdge = (key) => {\n        let k = new Map(edges);\n        k.delete(key);\n        let b = new Map(bendPositions);\n        b.delete(key);\n        setEdges(k);\n        setBendPositions(b);\n    }\n\n    const addEdge = (v1, v2) => {\n        let valid = [\"none\", \"none\"];\n        v1 = Number(v1);\n        v2 = Number(v2);\n        if(!(Number.isInteger(v1)) || v1 > vertices.length - 1) {\n            valid[0] = (\"error\");\n        }\n        if(!(Number.isInteger(v2)) || v2 > vertices.length - 1) {\n            valid[1] = \"error\";\n        }\n        if(v1 === v2) {\n            valid[0] = \"error\";\n            valid[1] = \"error\";\n        }\n        if(valid[0] === \"error\" || valid[1] === \"error\") {\n            return valid;\n        }\n        let key;\n        if(v1 > v2) {\n            key = v2 + \".\" + v1;\n        } else {\n            key = v1 + \".\" + v2;\n        }\n        if(edges.has(key)) {\n            return [\"error\", \"error\"]\n        } else {\n            setEdges(new Map(edges.set(key, {\n                \"id\": key,\n                \"node1\": v1,\n                \"node2\": v2,\n                \"bent\": false,\n                \"posX\": null,\n                \"posY\": null\n            })));\n\n\n            setBendPositions(new Map(bendPositions.set(key, {\n                \"id\": key,\n                \"bent\": false,\n                \"posX\": null,\n                \"posY\": null\n            })));\n\n            return [\"success\", \"success\"];\n        }\n    }\n\n    const deleteEdgeTest = (v1, v2) => {\n        let valid = [\"none\", \"none\"];\n        v1 = Number(v1);\n        v2 = Number(v2);\n\n        if(!(Number.isInteger(v1)) || v1 > vertices.length - 1) valid[0] = (\"error\");\n        \n        if(!(Number.isInteger(v2)) || v2 > vertices.length - 1) valid[1] = \"error\";\n        \n        if(v1 === v2) {\n            valid[0] = \"error\";\n            valid[1] = \"error\";\n        }\n\n        if(valid[0] === \"error\" || valid[1] === \"error\") return valid;\n        let key;\n\n        if(v1 > v2) {\n            key = v2 + \".\" + v1;\n        } else {\n            key = v1 + \".\" + v2;\n        }\n        if(!edges.has(key)) {\n            return [\"error\", \"error\"]\n        } else {\n            deleteEdge(key);\n            return [\"success\", \"success\"];\n        }\n    }\n\n    const centerGraph = () => {\n        let newVertices = [];\n        vertices.forEach(vertex => {\n            console.log(vertex);\n            vertex.posX = 750;\n            vertex.posY = 420;\n\n            newVertices.push(vertex);\n        })\n\n        setVertices(newVertices);\n        straightenEdges();\n    }\n\n    const [width, setWidth] = useState(window.innerWidth)\n\n    useEffect(() => {\n        if(updating) setUpdating(false);\n\n        const handleResize = () => setWidth(window.innerWidth);\n        window.addEventListener(\"resize\", handleResize);\n        return () => {\n            window.removeEventListener(\"resize\", handleResize);\n        };\n    \n    \n    }, [edges, bendPositions, window.innerWidth])\n\n    const getReturn = () => {\n        if(window.innerWidth > \"670\") {\n            return (\n                <div style={{overflow:\"auto\"}}>\n                    <div style={{display:\"flex\", height: '92vh', width:'94vw', marginLeft:\"3vw\", marginRight:\"3vw\", marginTop:\"3vh\", marginBottom:\"2.75vh\", overflow:\"hidden\"}} \n                        onMouseDown={(e) => {tryAddVertex(e); setAddingVertex(false)}}>\n                        <Inputs setAddingVertex={setAddingVertex} straightenEdges={straightenEdges} addEdge={addEdge} setDeletingVertex={setDeletingVertex} deleteEdge={deleteEdgeTest}\n                                setGraph={setGraph} edges={edges} vertices={vertices} bendPositions={bendPositions}\n                                logIn={props.login} logOut={props.logout} loggedIn={props.loggedIn} centerGraph={centerGraph}\n                        />\n                        {updating ? <React.Fragment/> : <GraphVisual vertices={vertices} edges={edges} bendPositions={bendPositions} setVertices={setVertices} deletingVertex={deletingVertex}\n                                    setBendPositions={setBendPositions} onMouseDown={(e) => {tryAddVertex(e); setAddingVertex(false)}} deleteVertex={deleteVertex}/> }\n                    </div>\n                </div>\n            )\n        } else {\n            return <Error />\n        }\n    }\n        \n    return (\n        <React.Fragment>\n            {getReturn()}\n        </React.Fragment>\n    )\n}\n","import React, {useState, useEffect} from 'react'\nimport {useLocation, withRouter} from 'react-router-dom';\n\nfunction TokenPage(props) {\n    const [id, setID] = useState((useLocation().pathname).replace(\"/confirm_email/\", \"\"));\n    const [message, setMessage] = useState(\"Temp\");\n    const submit = (e) => {\n        fetch('https://graphtt.herokuapp.com/confirm_email/' + id, {\n            method: 'POST',\n            body: JSON.stringify({\n                'token': id // change here\n            }),\n            headers: {\n                \"Content-type\": \"application/json\"\n            }\n        }).then(response => response.json()).then(msg => login(msg))\n    }\n\n    const login = (msg) => {\n        setMessage(msg);\n\n        if(msg.status === \"Accepted\") {\n            props.login(msg.email);\n            let k = window.location.href;\n            let m = k.search(\"/confirm_email\");\n            window.location.replace(k.substr(0,m));\n        }\n    }\n\n    useEffect(() => {\n        if(props.loggedIn === true) {\n            let k = window.location.href;\n            let m = k.search(\"/confirm_email\");\n            window.location.replace(k.substr(0,m));\n        } else {\n            submit();\n        }\n    }, [])\n\n    return (\n        <h1>\n            {message.status}\n        </h1>\n    )\n}\n\nexport default withRouter(TokenPage)\n","import React, {useState, useEffect} from 'react';\nimport { Switch, BrowserRouter as Router, Route, Redirect} from 'react-router-dom';\nimport Data from '../display/data/Data';\nimport TokenPage from '../display/authtokens/TokenPage';\n\nexport default function Routes() {\n  const [loggedIn, setLoggedIn] = useState(localStorage.getItem(\"loggedIn\"));\n  const [email, setEmail] = useState(localStorage.getItem(\"email\"));\n\n  const login = (email) => {\n    localStorage.setItem(\"loggedIn\", true);\n    localStorage.setItem(\"email\", email);\n    setLoggedIn(true);\n  }\n\n  const logOut = () => {\n    localStorage.setItem(\"loggedIn\", false);\n    localStorage.removeItem(\"email\");\n    setLoggedIn(false);\n  }\n\n  useEffect(() => {\n    if(localStorage.getItem(\"loggedIn\") == \"true\") {\n      setLoggedIn(true);\n    } else {\n      setLoggedIn(false);\n    }\n  \n  }, []);\n\n  return (\n      <Router>\n        <Switch>\n          <Route exact path=\"/\"><Data loggedIn={loggedIn} login={login} logout={logOut}/></Route>\n          <Route exact path=\"/confirm_email/:token\" component={() => <TokenPage loggedIn={loggedIn} login={login}/>}/>\n          <Route path='/'><Redirect to='/'/></Route>\n        </Switch>\n      </Router>\n  )\n}\n","import logo from './logo.svg';\nimport './App.css';\nimport React from 'react'\nimport Graph from './logic/graph/Graph'\nimport GraphVisual from './display/graphs/GraphVisual'\nimport { useEffect, useState } from 'react'\nimport { BFSCycle, BFSNoRepeat, BFSRepeat } from './logic/algorithms/BFS'\nimport Components from './logic/algorithms/Components'\nimport 'antd/dist/antd.css';\nimport Routes from './routing/Routes'\n\nfunction App() {\n  useEffect(() => {\n    \n  })\n  return (\n    <React.Fragment>\n      <Routes/>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n\n/*     let adj = [[0,1,0,1], [1,0,1,1], [0,1,0,1], [1,1,1,0]];\n    let graph = new Graph(adj);\n    let vertices = BFSCycle(graph, 0);\n\n    let k = new Components(graph);\n    console.log(k.getComponents());\n    console.log(k.getComponentCount()); */\n    ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}